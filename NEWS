-*- org -*-

#+STARTUP: hidestars oddeven

HINT: org-mode global cycling: S-TAB

HINT: To show all content (including any drawers), regardless of org-mode
startup visibility:

:    C-u C-u C-u TAB

[The above assumes the default key binding of TAB to [[elisp:org-cycle][org-cycle]].]


This is the 'NEWS' file for the 'cdm' project. This file contains information
on changes since the last release of the package, as well as a running list of
high-level changes from previous versions.  If critical bugs are found in any
of the software, notice of such bugs and the versions in which they were fixed
will be noted here, as well.

-----------------------------------------------------------------------

* cdm 0.1.1  (TBD)

** fixes

   (None)


** improvements

   (None)


* cdm 0.1.0  (2025-02-05)

** fixes

   (None)


** improvements

*** issue #2: "cdm: allow multiple directory (sub)trees to be specified on the command line, and 'cd' into the last"

    https://github.com/salewski/cdm/issues/2

    This enhancement allows for common desired usage patterns such as:

    :   $ cdm YYYY/MM/DD/whatever/{pristine,munge}
    :   /path/to/YYYY/MM/DD/whatever/munge
    :   [user is now in the directory 'YYYY/MM/DD/whatever/munge/']

    Notice that the command as typed above uses shell expansion syntax that
    results in the 'cdm' command receiving two command line arguments, exactly
    as if the user had typed:

    :   $ cdm YYYY/MM/DD/whatever/pristine YYYY/MM/DD/whatever/munge

    Prior to this enhancement, achieving the same end result required the
    following three-command sequence:

    :   $ cdm YYYY/MM/DD/whatever/
    :   /path/to/YYYY/MM/DD/whatever/
    :   [user is now in the directory 'YYYY/MM/DD/whatever/']

    :   $ mkdir pristine munge
    :   [two subdirectories have been created]

    :   $ cd munge
    :   [user is now in the directory 'YYYY/MM/DD/whatever/munge/']


* cdm 0.0.1  (circa 2020-10-25)

** Initial version of project.

   The project currently provides Bash-specific shell function, =cdm=, whose
   implementation is split across two file:

       'cdm.bash'
       'cdm_function.bash.in'

   The meat of the implementation is in the 'cdm.bash' file, which needs to be
   "sourced" into a user's shell session to be useful.

   The 'cdm_function.bash.in' file contains an example definition of the 'cdm'
   shell function, which the user is expected to edit an place in a Bash shell
   startup configuration file (=~/.bash_profile=, =~/.bashrc=, or
   similar). The function must be edited to allow it to find the 'cdm.bash'
   file, wherever you happened to put that on your system.

   Once the above two pieces are in place, the user makes use of the 'cdm'
   function like so:

   :   $ cdm path/to/some/new/subdirectory

   That has the same effect as if the user had typed the following two
   commands separately:

   :   $ mkdir -p path/to/some/new/subdirectory
   :
   :   $ cd path/to/some/new/subdirectory

   The reason the functionality needs to be implemented as a shell function is
   that it needs to be able to change the current working directory of the
   user's interactive shell process. Unix sub-processes (such as non-builtin
   command a user invokes from the shell prompt) cannot affect the current
   working directory of their parent process.
